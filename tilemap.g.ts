// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level1":
            case "level1":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "first room":
            case "level2":return tiles.createTilemap(hex``, img`
22222222222222222222222222222222
2..............................2
2.222..........................2
2.2...222222222222222222222222.2
2.2..22........................2
2.2..2..2.222222.2222.22222222.2
2.2222.22.222222....2.2......2.2
2...2..2.......2....2.2......2.2
2.2.2.22222222.222222.2...2222.2
2.2.2.2.............2.22222....2
2.2.2.2.22222222222.2.......22.2
2.2.2.2.22........2.2.22222..2.2
2.2.2.2.22........2.2.2...2..2.2
2.2.2.2.22222222222.2.2.2.2222.2
2.2.2.2.222......22.2.2.2....2.2
2.2.2.2.222......22.2.2.2222.2.2
2.2.2.2.222......22.2.2....2.2.2
2.2.2.2.22222.22222.2.2222.2...2
2.2...2.22222.22222.2....2.22222
2.2.2.2.22222.......222..2.....2
2.2.2.2.....2.22.222222222.222.2
2.2.2222222.2.2..2...2...2.2.2.2
2.2.......2.2.2..2.2.2.2.2.2.2.2
2.2.2.22222.2.2..2.2.2.2.2.2.2.2
2.2.2.......2.2..2.2.2.2.2.2.2.2
2.2.222222222.2..2.2.2.2.2.2.2.2
2.2.2.........2....2...2.....2.2
2.2.2.2222222.2222222222222222.2
2.2.2222..................2222.2
2.2....222222.2222222222222....2
2...2..........................2
22222222222222222222222222222222
`, [myTiles.transparency16,sprites.dungeon.floorLight0,sprites.dungeon.collectibleInsignia,sprites.dungeon.collectibleBlueCrystal,sprites.dungeon.hazardSpike,myTiles.tile3], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "myTile":
            case "tile1":return tile1;
            case "myTile0":
            case "tile2":return tile2;
            case "postrach_duchu_tilemap":
            case "tile3":return tile3;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
